---
/*!
 * Copyright (c) Cynthia Rey, All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import { getCollection, render } from 'astro:content'

import Layout from '../../layouts/GlobalLayout.astro'
import PageHeader from '../../components/PageHeader.astro'

import calendar from 'feather-icons/dist/icons/calendar.svg'
import clock from 'feather-icons/dist/icons/clock.svg'

import 'remark-github-blockquote-alert/alert.css'

export async function getStaticPaths () {
	const blogEntries = await getCollection('blog')
	return blogEntries.map(entry => ({
		params: { slug: entry.id },
		props: { entry: entry },
	}))
}

const dateFormatter = new Intl.DateTimeFormat('en-GB', {
	year: 'numeric',
	month: 'short',
	day: 'numeric',
})

const { entry } = Astro.props
const { Content, remarkPluginFrontmatter } = await render(entry)
---
<Layout title={`${entry.data.title} - cynthia's blog`} description={entry.data.description}>
	<div class="blog-wrapper">
		<PageHeader>
			<Fragment>{entry.data.title}</Fragment>
			<div class="blog-info" slot="subtitle">
				<div class="blog-info-item">
					<img src={calendar.src} alt="Published on" />
					<time datetime={entry.data.date.toISOString().slice(0, 10)}>
						{dateFormatter.format(entry.data.date)}
					</time>
				</div>
				<div class="blog-info-item">
					<img src={clock.src} alt="Time to read" />
					<span>{remarkPluginFrontmatter.readingTime}</span>
				</div>
			</div>
		</PageHeader>
		<main class="blog-contents">
			<Content />
		</main>
		<hr class="blog-footer-separator" />
		<div class="blog-license">
			Written with love by Cynthia. Contents of this blog are licensed under a
			<a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noreferrer">
				Creative Commons Attribution-ShareAlike 4.0 International License</a>,
			unless stated otherwise. Acknowledgement & link to the this post suffice as attribution.
		</div>
	</div>
</Layout>

<script>
	import 'bluesky-post-embed'
</script>

<style>
	.blog-wrapper {
		text-transform: initial;
	}

	.blog-info {
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
	}

	.blog-info-item {
		display: flex;
		align-items: center;
		gap: 0.75rem;
	}

	.blog-contents {
		margin-top: 2rem;
		font-size: 1.125rem;
		text-align: justify;
	}

	.blog-contents :global(:is(p, li)) {
		margin: 0;
		line-height: 1.5rem;
	}

	.blog-contents :global(
		:is(p, bluesky-post, ul, ol) + :is(p, bluesky-post, ul, ol)
	) {
		margin-top: 1.75em;
	}

	.blog-contents :global(li + li) {
		margin-top: 0.75em;
	}

	.blog-contents :global(:is(h2, h3, h4, h5, h6)) {
		margin-top: 2.75rem;
		margin-bottom: 1rem;
		font-weight: 500;
	}

	.blog-contents :global(:is(h2, h3, h4, h5, h6) span) {
		background-image: linear-gradient(to right, #f49898, #f49898);
		background-position: 0 1.2em;
		background-repeat: no-repeat;
		background-size: 25% .125em;
		padding-bottom: .16em;
	}

	.blog-contents :global(h2) {
		font-size: 1.75em;
	}

	.blog-contents :global(h3) {
		font-size: 1.5em;
	}

	.blog-contents :global(h4) {
		font-size: 1.25em;
	}

	.blog-contents :global(h5) {
		font-size: 1em;
	}

	.blog-contents :global(h6) {
		font-size: 0.8em;
	}

	.blog-contents :global(code) {
		padding: 0 .2em;
		margin: -.2em 0;
		border-radius: 4px;
		font-size: 85%;
		line-height: 1.125em;
		text-indent: 0;
		white-space: pre-wrap;
		background-color: #e0e0e0;
		border: 1px #bbb solid;
	}

	.blog-contents :global(blockquote) {
		margin: 1.75em 0;
		padding: .6em 0 .6em 1.5em;
		border-left: 0.25em #bbb solid;
	}

	.blog-contents :global(blockquote p + p) {
		margin-top: 1em;
	}

	.blog-contents :global(.markdown-alert) {
		margin: 1.75em 0;
	}

	.blog-contents :global(.markdown-alert p) {
		margin-top: 0;
		margin-bottom: 0.75em;
	}

	.blog-contents :global(.markdown-alert .markdown-alert-title) {
		margin-top: 0;
		margin-bottom: 1em;
		font-weight: 500;
		font-size: 1em;
	}

	.blog-contents :global(.astro-code) {
		padding: 1em;
		line-height: 1.2;
	}

	.blog-contents :global(.astro-code code) {
		padding: 0;
		background-color: transparent;
		border-width: 0;
		tab-size: 4;
	}

	.blog-footer-separator {
		margin: 1.75em 0 0.5em 0;
	}

	.blog-license {
		font-size: 0.85em;
	}

	@media (prefers-color-scheme: dark) {
		.blog-info-item img {
			filter: invert();
		}

		.blog-contents :global(code) {
			background-color: #333;
			border: 1px #111 solid;
		}

		.blog-contents :global(blockquote) {
			border-color: #444;
		}
	}

	@media (min-width: 610px) {
		.blog-info {
			flex-direction: row;
			gap: 1.75em;
		}
	}
</style>
