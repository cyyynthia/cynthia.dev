---
/*!
 * Copyright (c) Cynthia Rey, All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import bird from '../assets/bird.svg'
const files: Record<string, { default: string }> = import.meta.glob('../assets/donators/*.png', { eager: true })

export interface Props {
	name: string
	pic: string | null
	date: string
}

function formatDate (str: string) {
	const date = new Date(str)
	const d = date.getDate().toString().padStart(2, '0')
	const m = (date.getMonth() + 1).toString().padStart(2, '0')
	const y = date.getFullYear()
	return `${d}/${m}/${y}`
}

const { name, pic, date } = Astro.props
---
<div class='donator'>
	{pic
		? <img class='donator-pic' src={files[`../assets/donators/${pic}`]!.default} alt={`${name}'s profile picture'`}/>
		: <img class='donator-pic-default' src={bird} alt={`${name}'s profile picture'`}/>}
	<div class='donator-info'>
		<span class='donator-name'>{name}</span>
		<span class='donator-date'>{formatDate(date)}</span>
	</div>
</div>

<style>
	.donator {
		display: flex;
		align-items: center;
		border-radius: 8px;
		gap: 24px;
		height: 4.5rem;
		background-color: #eee;
		padding: 0.5rem 1rem;
	}

	.donator-pic {
		width: 3.5rem;
		height: 3.5rem;
		border-radius: 50%;
	}

	.donator-pic-default {
		width: 2.5rem;
		height: 2.5rem;
	}

	.donator-info {
		display: flex;
		flex-direction: column;
	}

	.donator-name {
		margin-bottom: 4px;
	}

	.donator-date {
		opacity: 0.8;
		font-size: 0.8em;
	}

	@media (prefers-color-scheme: dark) {
		.donator {
			background-color: #202020;
		}
	}
</style>